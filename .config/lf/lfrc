# Basic Settings
set hidden true
set ignorecase true
set icons true
set promptfmt "\033[34;1m%d\033[0m\033[1m%f\033[0m"
set cursorpreviewfmt "\033[4m"
set scrolloff 10
set autoquit true
set shell /bin/zsh
set ifs "\n"
set preview
set previewer ~/.config/lf/preview.sh

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open &{{
	case $(file --mime-type -Lb $f) in
		text/*) lf -remote "send $id \$$EDITOR \$fx";;
	 *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
	 esac
 }}

# define a custom 'rename' command without prompt for overwrite
cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
# make sure trash folder exists
# %mkdir -p ~/.trash

# move current file or selected files to trash folder
# (also see 'man mv' for backup/overwrite options)
cmd trash %set -f; mv $fx /tmp

# define a custom 'delete' command
cmd delete ${{
	set -f
	printf "$fx\n"
	printf "delete?[y/n]"
	read ans
	[ "$ans" = "y" ] && rm -rf $fx
}}


# use '<delete>' key for either 'trash' or 'delete' command
# map <delete> trash
# map <delete> delete

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
	set -f
	case $f in
		 *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
		 *.tar.gz|*.tgz) tar xzvf $f;;
		 *.tar.xz|*.txz) tar xJvf $f;;
		 *.zip) unzip $f;;
		 *.rar) unrar x $f;;
		 *.7z) 7z x $f;;
	 esac
 }}

# compress current file or selected files with tar and gunzip
cmd tar ${{
	set -f
	mkdir $1
	cp -r $fx $1
	tar czf $1.tar.gz $1
	rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
	set -f
	mkdir $1
	cp -r $fx $1
	zip -r $1.zip $1
	rm -rf $1
}}



# Bindings
map . set hidden!
map <c-n> push :mkdir<space>""<left>
map DD trash
map x cut
map <enter> open
map R reload
# use enter for shell commands
map <enter> shell
# show the result of execution of previous commands
map ` !true
# execute current file (must be executable)
map x $$f
map X !$f
# dedicated keys for file opener actions
map o &mimeopen $f
map O $mimeopen --ask $f
# mkdir command. See wiki if you want it to select created dir
map A :push %mkdir<space>
map a mkfile
map r push :rename<space>




